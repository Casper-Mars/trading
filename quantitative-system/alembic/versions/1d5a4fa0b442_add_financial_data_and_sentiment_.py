"""Add financial_data and sentiment_analysis tables

Revision ID: 1d5a4fa0b442
Revises: 8518750f9dbe
Create Date: 2025-08-12 15:16:56.622727

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '1d5a4fa0b442'
down_revision: Union[str, Sequence[str], None] = '8518750f9dbe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('strategy_type', sa.Enum('TREND_FOLLOWING', 'MEAN_REVERSION', 'MOMENTUM', 'ARBITRAGE', 'CUSTOM', name='strategytype'), nullable=False),
    sa.Column('strategy_params', sa.JSON(), nullable=True),
    sa.Column('symbols', sa.JSON(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('initial_cash', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('final_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('annual_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('max_drawdown', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('win_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('avg_trade_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('volatility', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('calmar_ratio', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='backteststatus'), nullable=False),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_backtest_created_at', 'backtest_results', ['created_at'], unique=False)
    op.create_index('idx_backtest_status', 'backtest_results', ['status'], unique=False)
    op.create_index('idx_backtest_strategy_type', 'backtest_results', ['strategy_type'], unique=False)
    op.create_table('market_data_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('data_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('time_frame', sa.Enum('MINUTE_1', 'MINUTE_5', 'MINUTE_15', 'MINUTE_30', 'HOUR_1', 'HOUR_4', 'DAY_1', 'WEEK_1', name='timeframe'), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('data_source', sa.Enum('TUSHARE', 'AKSHARE', 'WIND', 'BLOOMBERG', 'CUSTOM_API', 'DATA_COLLECTION', name='datasource'), nullable=False),
    sa.Column('data_content', sa.JSON(), nullable=True),
    sa.Column('data_size', sa.Integer(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('last_hit_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cache_key', name='uq_cache_key')
    )
    op.create_index('idx_cache_data_type', 'market_data_cache', ['data_type'], unique=False)
    op.create_index('idx_cache_expires_at', 'market_data_cache', ['expires_at'], unique=False)
    op.create_index('idx_cache_key', 'market_data_cache', ['cache_key'], unique=False)
    op.create_index('idx_cache_symbol', 'market_data_cache', ['symbol'], unique=False)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('position_type', sa.Enum('LONG', 'SHORT', name='positiontype'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('avg_cost', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('market_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('unrealized_pnl', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('realized_pnl', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CLOSED', 'SUSPENDED', name='positionstatus'), nullable=False),
    sa.Column('open_date', sa.Date(), nullable=False),
    sa.Column('close_date', sa.Date(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_positions_open_date', 'positions', ['open_date'], unique=False)
    op.create_index('idx_positions_status', 'positions', ['status'], unique=False)
    op.create_index('idx_positions_symbol', 'positions', ['symbol'], unique=False)
    op.create_table('sentiment_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('sentiment_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('sentiment_label', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('confidence', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('emotions', sa.JSON(), nullable=True),
    sa.Column('topics', sa.JSON(), nullable=True),
    sa.Column('entities', sa.JSON(), nullable=True),
    sa.Column('processing_time', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('news_id', 'content_type', 'model_name', name='uq_sentiment_news_content_model')
    )
    op.create_index('idx_sentiment_content_type', 'sentiment_analysis', ['content_type'], unique=False)
    op.create_index('idx_sentiment_created_at', 'sentiment_analysis', ['created_at'], unique=False)
    op.create_index('idx_sentiment_label', 'sentiment_analysis', ['sentiment_label'], unique=False)
    op.create_index('idx_sentiment_news_id', 'sentiment_analysis', ['news_id'], unique=False)
    op.create_index('idx_sentiment_score', 'sentiment_analysis', ['sentiment_score'], unique=False)
    op.create_table('stock_basic_info',
    sa.Column('ts_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('area', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('industry', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('market', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('exchange', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('curr_type', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('list_status', sqlmodel.sql.sqltypes.AutoString(length=1), nullable=True),
    sa.Column('list_date', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True),
    sa.Column('delist_date', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True),
    sa.Column('is_hs', sqlmodel.sql.sqltypes.AutoString(length=1), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('ts_code')
    )
    op.create_index('idx_stock_basic_industry', 'stock_basic_info', ['industry'], unique=False)
    op.create_index('idx_stock_basic_list_status', 'stock_basic_info', ['list_status'], unique=False)
    op.create_index('idx_stock_basic_market', 'stock_basic_info', ['market'], unique=False)
    op.create_index('idx_stock_basic_name', 'stock_basic_info', ['name'], unique=False)
    op.create_index('idx_stock_basic_symbol', 'stock_basic_info', ['symbol'], unique=False)
    op.create_table('stock_daily_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ts_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('trade_date', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
    sa.Column('open', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('high', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('low', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('close', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('pre_close', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('change', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('pct_chg', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('vol', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('amount', sa.Numeric(precision=20, scale=4), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ts_code', 'trade_date', name='uq_stock_daily_ts_code_date')
    )
    op.create_index('idx_stock_daily_trade_date', 'stock_daily_data', ['trade_date'], unique=False)
    op.create_index('idx_stock_daily_ts_code', 'stock_daily_data', ['ts_code'], unique=False)
    op.create_index('idx_stock_daily_ts_code_date', 'stock_daily_data', ['ts_code', 'trade_date'], unique=False)
    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', name='loglevel'), nullable=False),
    sa.Column('module', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('function', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('request_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('execution_time', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_logs_created_at', 'system_logs', ['created_at'], unique=False)
    op.create_index('idx_system_logs_level', 'system_logs', ['level'], unique=False)
    op.create_index('idx_system_logs_module', 'system_logs', ['module'], unique=False)
    op.create_index('idx_system_logs_user_id', 'system_logs', ['user_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('task_type', sa.Enum('DATA_SYNC', 'BACKTEST', 'PLAN_GENERATION', 'POSITION_UPDATE', 'RISK_ANALYSIS', 'REPORT_GENERATION', name='tasktype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', 'RETRYING', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('execution_time', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_created_at', 'tasks', ['created_at'], unique=False)
    op.create_index('idx_tasks_priority', 'tasks', ['priority'], unique=False)
    op.create_index('idx_tasks_scheduled_at', 'tasks', ['scheduled_at'], unique=False)
    op.create_index('idx_tasks_status', 'tasks', ['status'], unique=False)
    op.create_index('idx_tasks_type', 'tasks', ['task_type'], unique=False)
    op.create_table('trading_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_date', sa.Date(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('plan_type', sa.Enum('MANUAL', 'AUTO', 'HYBRID', name='plantype'), nullable=False),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'EXTREME', name='risklevel'), nullable=False),
    sa.Column('target_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('max_drawdown_limit', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('position_limit', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('backtest_results', sa.JSON(), nullable=True),
    sa.Column('ai_analysis', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'COMPLETED', 'CANCELLED', name='planstatus'), nullable=False),
    sa.Column('execution_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('actual_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plan_date', 'title', name='uq_plan_date_title')
    )
    op.create_index('idx_trading_plans_date', 'trading_plans', ['plan_date'], unique=False)
    op.create_index('idx_trading_plans_status', 'trading_plans', ['status'], unique=False)
    op.create_index('idx_trading_plans_type', 'trading_plans', ['plan_type'], unique=False)
    op.drop_index(op.f('idx_indicator_code'), table_name='macro_data')
    op.drop_index(op.f('idx_period'), table_name='macro_data')
    op.drop_index(op.f('idx_period_date'), table_name='macro_data')
    op.drop_index(op.f('uk_indicator_period_date'), table_name='macro_data')
    op.drop_table('macro_data')
    op.drop_index(op.f('idx_created_at'), table_name='data_tasks')
    op.drop_index(op.f('idx_priority'), table_name='data_tasks')
    op.drop_index(op.f('idx_start_time'), table_name='data_tasks')
    op.drop_index(op.f('idx_status'), table_name='data_tasks')
    op.drop_index(op.f('idx_task_type'), table_name='data_tasks')
    op.drop_table('data_tasks')
    op.drop_index(op.f('idx_market_type'), table_name='market_data')
    op.drop_index(op.f('idx_trade_date'), table_name='market_data')
    op.drop_index(op.f('uk_trade_date_market_type'), table_name='market_data')
    op.drop_table('market_data')
    op.drop_index(op.f('idx_trade_date'), table_name='stock_daily')
    op.drop_index(op.f('idx_ts_code'), table_name='stock_daily')
    op.drop_index(op.f('uk_ts_code_trade_date'), table_name='stock_daily')
    op.drop_table('stock_daily')
    op.drop_index(op.f('idx_industry'), table_name='stocks')
    op.drop_index(op.f('idx_list_status'), table_name='stocks')
    op.drop_index(op.f('idx_market'), table_name='stocks')
    op.drop_index(op.f('idx_symbol'), table_name='stocks')
    op.drop_index(op.f('uk_ts_code'), table_name='stocks')
    op.drop_table('stocks')
    op.add_column('financial_data', sa.Column('int_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('prem_earned', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('comm_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_commis_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_oth_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_oth_b_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('prem_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('out_prem', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('une_prem_reser', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('reins_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_sec_tb_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_sec_uw_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('n_asset_mg_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oth_b_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('fv_value_chg_gain', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('invest_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('ass_invest_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('forex_gain', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('total_cogs', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oper_cost', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('int_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('comm_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('biz_tax_surchg', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('sell_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('admin_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('fin_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('assets_impair_loss', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('prem_refund', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('compens_payout', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('reser_insur_liab', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('div_payt', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('reins_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oper_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('compens_payout_refu', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('insur_reser_refu', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('reins_cost_refund', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('other_bus_cost', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('non_oper_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('non_oper_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('nca_disploss', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('income_tax', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('minority_gain', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oth_compr_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('t_compr_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('compr_inc_attr_p', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('compr_inc_attr_m_s', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('insurance_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('undist_profit', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('distable_profit', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('rd_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('fin_exp_int_exp', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('fin_exp_int_inc', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('transfer_surplus_rese', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('transfer_housing_imprest', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('transfer_oth', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('adj_lossgain', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('withdra_legal_surplus', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('withdra_legal_pubfund', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('withdra_biz_devfund', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('withdra_rese_fund', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('withdra_oth_ersu', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('workers_welfare', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('distr_profit_shrhder', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('prfshare_payable_dvd', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('comshare_payable_dvd', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('capit_comstock_div', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('net_after_nr_lp_correct', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('credit_impa_loss', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('net_expo_hedging_benefits', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oth_impair_loss_assets', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('total_opcost', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('amodcost_fin_assets', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('oth_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('asset_disp_income', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('continued_net_profit', sa.Numeric(precision=20, scale=4), nullable=True))
    op.add_column('financial_data', sa.Column('end_net_profit', sa.Numeric(precision=20, scale=4), nullable=True))
    op.alter_column('financial_data', 'id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('financial_data', 'ts_code',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='TS代码',
               existing_nullable=False)
    op.alter_column('financial_data', 'ann_date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=8),
               comment=None,
               existing_comment='公告日期',
               existing_nullable=True)
    op.alter_column('financial_data', 'f_ann_date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=8),
               comment=None,
               existing_comment='实际公告日期',
               existing_nullable=True)
    op.alter_column('financial_data', 'end_date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=8),
               comment=None,
               existing_comment='报告期',
               existing_nullable=False)
    op.alter_column('financial_data', 'report_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sqlmodel.sql.sqltypes.AutoString(length=10),
               comment=None,
               existing_comment='报告类型',
               existing_nullable=True)
    op.alter_column('financial_data', 'comp_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sqlmodel.sql.sqltypes.AutoString(length=10),
               comment=None,
               existing_comment='公司类型',
               existing_nullable=True)
    op.alter_column('financial_data', 'basic_eps',
               existing_type=mysql.DECIMAL(precision=10, scale=4),
               comment=None,
               existing_comment='基本每股收益',
               existing_nullable=True)
    op.alter_column('financial_data', 'diluted_eps',
               existing_type=mysql.DECIMAL(precision=10, scale=4),
               comment=None,
               existing_comment='稀释每股收益',
               existing_nullable=True)
    op.alter_column('financial_data', 'total_revenue',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='营业总收入',
               existing_nullable=True)
    op.alter_column('financial_data', 'revenue',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='营业收入',
               existing_nullable=True)
    op.alter_column('financial_data', 'operate_profit',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='营业利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'total_profit',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='利润总额',
               existing_nullable=True)
    op.alter_column('financial_data', 'n_income',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='净利润(含少数股东损益)',
               existing_nullable=True)
    op.alter_column('financial_data', 'n_income_attr_p',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='净利润(不含少数股东损益)',
               existing_nullable=True)
    op.alter_column('financial_data', 'ebit',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='息税前利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'ebitda',
               existing_type=mysql.DECIMAL(precision=20, scale=2),
               type_=sa.Numeric(precision=20, scale=4),
               comment=None,
               existing_comment='息税折旧摊销前利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('financial_data', 'updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_ann_date'), table_name='financial_data')
    op.drop_index(op.f('idx_end_date'), table_name='financial_data')
    op.drop_index(op.f('idx_ts_code'), table_name='financial_data')
    op.drop_index(op.f('uk_ts_code_end_date'), table_name='financial_data')
    op.create_index('idx_financial_ann_date', 'financial_data', ['ann_date'], unique=False)
    op.create_index('idx_financial_end_date', 'financial_data', ['end_date'], unique=False)
    op.create_index('idx_financial_ts_code', 'financial_data', ['ts_code'], unique=False)
    op.create_index('idx_financial_ts_code_end_date', 'financial_data', ['ts_code', 'end_date'], unique=False)
    op.create_unique_constraint('uq_financial_ts_code_end_date_type', 'financial_data', ['ts_code', 'end_date', 'report_type'])
    op.drop_table_comment(
        'financial_data',
        existing_comment='财务数据表',
        schema=None
    )
    op.alter_column('news_data', 'id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('news_data', 'title',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               comment=None,
               existing_comment='新闻标题',
               existing_nullable=False)
    op.alter_column('news_data', 'content',
               existing_type=mysql.LONGTEXT(collation='utf8mb4_unicode_ci'),
               type_=sa.Text(),
               comment=None,
               existing_comment='新闻内容',
               existing_nullable=True)
    op.alter_column('news_data', 'source',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='新闻来源',
               existing_nullable=True)
    op.alter_column('news_data', 'author',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='作者',
               existing_nullable=True)
    op.alter_column('news_data', 'publish_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='发布时间',
               existing_nullable=True)
    op.alter_column('news_data', 'url',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               comment=None,
               existing_comment='原文链接',
               existing_nullable=True)
    op.alter_column('news_data', 'category',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               comment=None,
               existing_comment='新闻分类',
               existing_nullable=True)
    op.alter_column('news_data', 'tags',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               type_=sa.JSON(),
               comment=None,
               existing_comment='标签(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'related_stocks',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               type_=sa.JSON(),
               comment=None,
               existing_comment='相关股票代码(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'sentiment_score',
               existing_type=mysql.DECIMAL(precision=5, scale=4),
               comment=None,
               existing_comment='情感分数(-1到1)',
               existing_nullable=True)
    op.alter_column('news_data', 'sentiment_label',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='情感标签(positive/negative/neutral)',
               existing_nullable=True)
    op.alter_column('news_data', 'keywords',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               type_=sa.JSON(),
               comment=None,
               existing_comment='关键词(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'summary',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='新闻摘要',
               existing_nullable=True)
    op.alter_column('news_data', 'is_processed',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment=None,
               existing_comment='是否已处理',
               existing_server_default=sa.text("'0'"))
    op.alter_column('news_data', 'created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('news_data', 'updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ft_title_content'), table_name='news_data', mysql_prefix='FULLTEXT')
    op.drop_index(op.f('idx_category'), table_name='news_data')
    op.drop_index(op.f('idx_created_at'), table_name='news_data')
    op.drop_index(op.f('idx_is_processed'), table_name='news_data')
    op.drop_index(op.f('idx_publish_time'), table_name='news_data')
    op.drop_index(op.f('idx_sentiment_label'), table_name='news_data')
    op.drop_index(op.f('idx_source'), table_name='news_data')
    op.create_index('idx_news_category', 'news_data', ['category'], unique=False)
    op.create_index('idx_news_created_at', 'news_data', ['created_at'], unique=False)
    op.create_index('idx_news_is_processed', 'news_data', ['is_processed'], unique=False)
    op.create_index('idx_news_publish_time', 'news_data', ['publish_time'], unique=False)
    op.create_index('idx_news_source', 'news_data', ['source'], unique=False)
    op.create_index('idx_news_title', 'news_data', ['title'], unique=False)
    op.drop_table_comment(
        'news_data',
        existing_comment='新闻数据表',
        schema=None
    )
    op.drop_column('news_data', 'importance_score')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('news_data', sa.Column('importance_score', mysql.DECIMAL(precision=5, scale=4), nullable=True, comment='重要性分数(0到1)'))
    op.create_table_comment(
        'news_data',
        '新闻数据表',
        existing_comment=None,
        schema=None
    )
    op.drop_index('idx_news_title', table_name='news_data')
    op.drop_index('idx_news_source', table_name='news_data')
    op.drop_index('idx_news_publish_time', table_name='news_data')
    op.drop_index('idx_news_is_processed', table_name='news_data')
    op.drop_index('idx_news_created_at', table_name='news_data')
    op.drop_index('idx_news_category', table_name='news_data')
    op.create_index(op.f('idx_source'), 'news_data', ['source'], unique=False)
    op.create_index(op.f('idx_sentiment_label'), 'news_data', ['sentiment_label'], unique=False)
    op.create_index(op.f('idx_publish_time'), 'news_data', ['publish_time'], unique=False)
    op.create_index(op.f('idx_is_processed'), 'news_data', ['is_processed'], unique=False)
    op.create_index(op.f('idx_created_at'), 'news_data', ['created_at'], unique=False)
    op.create_index(op.f('idx_category'), 'news_data', ['category'], unique=False)
    op.create_index(op.f('ft_title_content'), 'news_data', ['title', 'content'], unique=False, mysql_prefix='FULLTEXT')
    op.alter_column('news_data', 'updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('news_data', 'created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('news_data', 'is_processed',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否已处理',
               existing_server_default=sa.text("'0'"))
    op.alter_column('news_data', 'summary',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='新闻摘要',
               existing_nullable=True)
    op.alter_column('news_data', 'keywords',
               existing_type=sa.JSON(),
               type_=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='关键词(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'sentiment_label',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='情感标签(positive/negative/neutral)',
               existing_nullable=True)
    op.alter_column('news_data', 'sentiment_score',
               existing_type=mysql.DECIMAL(precision=5, scale=4),
               comment='情感分数(-1到1)',
               existing_nullable=True)
    op.alter_column('news_data', 'related_stocks',
               existing_type=sa.JSON(),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               comment='相关股票代码(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'tags',
               existing_type=sa.JSON(),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               comment='标签(JSON格式)',
               existing_nullable=True)
    op.alter_column('news_data', 'category',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               comment='新闻分类',
               existing_nullable=True)
    op.alter_column('news_data', 'url',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               comment='原文链接',
               existing_nullable=True)
    op.alter_column('news_data', 'publish_time',
               existing_type=mysql.DATETIME(),
               comment='发布时间',
               existing_nullable=True)
    op.alter_column('news_data', 'author',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment='作者',
               existing_nullable=True)
    op.alter_column('news_data', 'source',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment='新闻来源',
               existing_nullable=True)
    op.alter_column('news_data', 'content',
               existing_type=sa.Text(),
               type_=mysql.LONGTEXT(collation='utf8mb4_unicode_ci'),
               comment='新闻内容',
               existing_nullable=True)
    op.alter_column('news_data', 'title',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               comment='新闻标题',
               existing_nullable=False)
    op.alter_column('news_data', 'id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.create_table_comment(
        'financial_data',
        '财务数据表',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint('uq_financial_ts_code_end_date_type', 'financial_data', type_='unique')
    op.drop_index('idx_financial_ts_code_end_date', table_name='financial_data')
    op.drop_index('idx_financial_ts_code', table_name='financial_data')
    op.drop_index('idx_financial_end_date', table_name='financial_data')
    op.drop_index('idx_financial_ann_date', table_name='financial_data')
    op.create_index(op.f('uk_ts_code_end_date'), 'financial_data', ['ts_code', 'end_date'], unique=True)
    op.create_index(op.f('idx_ts_code'), 'financial_data', ['ts_code'], unique=False)
    op.create_index(op.f('idx_end_date'), 'financial_data', ['end_date'], unique=False)
    op.create_index(op.f('idx_ann_date'), 'financial_data', ['ann_date'], unique=False)
    op.alter_column('financial_data', 'updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('financial_data', 'created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('financial_data', 'ebitda',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='息税折旧摊销前利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'ebit',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='息税前利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'n_income_attr_p',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='净利润(不含少数股东损益)',
               existing_nullable=True)
    op.alter_column('financial_data', 'n_income',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='净利润(含少数股东损益)',
               existing_nullable=True)
    op.alter_column('financial_data', 'total_profit',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='利润总额',
               existing_nullable=True)
    op.alter_column('financial_data', 'operate_profit',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='营业利润',
               existing_nullable=True)
    op.alter_column('financial_data', 'revenue',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='营业收入',
               existing_nullable=True)
    op.alter_column('financial_data', 'total_revenue',
               existing_type=sa.Numeric(precision=20, scale=4),
               type_=mysql.DECIMAL(precision=20, scale=2),
               comment='营业总收入',
               existing_nullable=True)
    op.alter_column('financial_data', 'diluted_eps',
               existing_type=mysql.DECIMAL(precision=10, scale=4),
               comment='稀释每股收益',
               existing_nullable=True)
    op.alter_column('financial_data', 'basic_eps',
               existing_type=mysql.DECIMAL(precision=10, scale=4),
               comment='基本每股收益',
               existing_nullable=True)
    op.alter_column('financial_data', 'comp_type',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=10),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='公司类型',
               existing_nullable=True)
    op.alter_column('financial_data', 'report_type',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=10),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='报告类型',
               existing_nullable=True)
    op.alter_column('financial_data', 'end_date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=8),
               type_=sa.DATE(),
               comment='报告期',
               existing_nullable=False)
    op.alter_column('financial_data', 'f_ann_date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=8),
               type_=sa.DATE(),
               comment='实际公告日期',
               existing_nullable=True)
    op.alter_column('financial_data', 'ann_date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=8),
               type_=sa.DATE(),
               comment='公告日期',
               existing_nullable=True)
    op.alter_column('financial_data', 'ts_code',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='TS代码',
               existing_nullable=False)
    op.alter_column('financial_data', 'id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('financial_data', 'end_net_profit')
    op.drop_column('financial_data', 'continued_net_profit')
    op.drop_column('financial_data', 'asset_disp_income')
    op.drop_column('financial_data', 'oth_income')
    op.drop_column('financial_data', 'amodcost_fin_assets')
    op.drop_column('financial_data', 'total_opcost')
    op.drop_column('financial_data', 'oth_impair_loss_assets')
    op.drop_column('financial_data', 'net_expo_hedging_benefits')
    op.drop_column('financial_data', 'credit_impa_loss')
    op.drop_column('financial_data', 'net_after_nr_lp_correct')
    op.drop_column('financial_data', 'capit_comstock_div')
    op.drop_column('financial_data', 'comshare_payable_dvd')
    op.drop_column('financial_data', 'prfshare_payable_dvd')
    op.drop_column('financial_data', 'distr_profit_shrhder')
    op.drop_column('financial_data', 'workers_welfare')
    op.drop_column('financial_data', 'withdra_oth_ersu')
    op.drop_column('financial_data', 'withdra_rese_fund')
    op.drop_column('financial_data', 'withdra_biz_devfund')
    op.drop_column('financial_data', 'withdra_legal_pubfund')
    op.drop_column('financial_data', 'withdra_legal_surplus')
    op.drop_column('financial_data', 'adj_lossgain')
    op.drop_column('financial_data', 'transfer_oth')
    op.drop_column('financial_data', 'transfer_housing_imprest')
    op.drop_column('financial_data', 'transfer_surplus_rese')
    op.drop_column('financial_data', 'fin_exp_int_inc')
    op.drop_column('financial_data', 'fin_exp_int_exp')
    op.drop_column('financial_data', 'rd_exp')
    op.drop_column('financial_data', 'distable_profit')
    op.drop_column('financial_data', 'undist_profit')
    op.drop_column('financial_data', 'insurance_exp')
    op.drop_column('financial_data', 'compr_inc_attr_m_s')
    op.drop_column('financial_data', 'compr_inc_attr_p')
    op.drop_column('financial_data', 't_compr_income')
    op.drop_column('financial_data', 'oth_compr_income')
    op.drop_column('financial_data', 'minority_gain')
    op.drop_column('financial_data', 'income_tax')
    op.drop_column('financial_data', 'nca_disploss')
    op.drop_column('financial_data', 'non_oper_exp')
    op.drop_column('financial_data', 'non_oper_income')
    op.drop_column('financial_data', 'other_bus_cost')
    op.drop_column('financial_data', 'reins_cost_refund')
    op.drop_column('financial_data', 'insur_reser_refu')
    op.drop_column('financial_data', 'compens_payout_refu')
    op.drop_column('financial_data', 'oper_exp')
    op.drop_column('financial_data', 'reins_exp')
    op.drop_column('financial_data', 'div_payt')
    op.drop_column('financial_data', 'reser_insur_liab')
    op.drop_column('financial_data', 'compens_payout')
    op.drop_column('financial_data', 'prem_refund')
    op.drop_column('financial_data', 'assets_impair_loss')
    op.drop_column('financial_data', 'fin_exp')
    op.drop_column('financial_data', 'admin_exp')
    op.drop_column('financial_data', 'sell_exp')
    op.drop_column('financial_data', 'biz_tax_surchg')
    op.drop_column('financial_data', 'comm_exp')
    op.drop_column('financial_data', 'int_exp')
    op.drop_column('financial_data', 'oper_cost')
    op.drop_column('financial_data', 'total_cogs')
    op.drop_column('financial_data', 'forex_gain')
    op.drop_column('financial_data', 'ass_invest_income')
    op.drop_column('financial_data', 'invest_income')
    op.drop_column('financial_data', 'fv_value_chg_gain')
    op.drop_column('financial_data', 'oth_b_income')
    op.drop_column('financial_data', 'n_asset_mg_income')
    op.drop_column('financial_data', 'n_sec_uw_income')
    op.drop_column('financial_data', 'n_sec_tb_income')
    op.drop_column('financial_data', 'reins_income')
    op.drop_column('financial_data', 'une_prem_reser')
    op.drop_column('financial_data', 'out_prem')
    op.drop_column('financial_data', 'prem_income')
    op.drop_column('financial_data', 'n_oth_b_income')
    op.drop_column('financial_data', 'n_oth_income')
    op.drop_column('financial_data', 'n_commis_income')
    op.drop_column('financial_data', 'comm_income')
    op.drop_column('financial_data', 'prem_earned')
    op.drop_column('financial_data', 'int_income')
    op.create_table('stocks',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('ts_code', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False, comment='TS代码'),
    sa.Column('symbol', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False, comment='股票代码'),
    sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=False, comment='股票名称'),
    sa.Column('area', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True, comment='地域'),
    sa.Column('industry', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='所属行业'),
    sa.Column('market', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=True, comment='市场类型'),
    sa.Column('exchange', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=True, comment='交易所代码'),
    sa.Column('curr_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10), nullable=True, comment='交易货币'),
    sa.Column('list_status', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10), nullable=True, comment='上市状态'),
    sa.Column('list_date', sa.DATE(), nullable=True, comment='上市日期'),
    sa.Column('delist_date', sa.DATE(), nullable=True, comment='退市日期'),
    sa.Column('is_hs', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10), nullable=True, comment='是否沪深港通标的'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='股票基础信息表',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_comment='股票基础信息表',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('uk_ts_code'), 'stocks', ['ts_code'], unique=True)
    op.create_index(op.f('idx_symbol'), 'stocks', ['symbol'], unique=False)
    op.create_index(op.f('idx_market'), 'stocks', ['market'], unique=False)
    op.create_index(op.f('idx_list_status'), 'stocks', ['list_status'], unique=False)
    op.create_index(op.f('idx_industry'), 'stocks', ['industry'], unique=False)
    op.create_table('stock_daily',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('ts_code', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False, comment='TS代码'),
    sa.Column('trade_date', sa.DATE(), nullable=False, comment='交易日期'),
    sa.Column('open', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='开盘价'),
    sa.Column('high', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='最高价'),
    sa.Column('low', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='最低价'),
    sa.Column('close', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='收盘价'),
    sa.Column('pre_close', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='昨收价'),
    sa.Column('change', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='涨跌额'),
    sa.Column('pct_chg', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='涨跌幅'),
    sa.Column('vol', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='成交量(手)'),
    sa.Column('amount', mysql.DECIMAL(precision=20, scale=3), nullable=True, comment='成交额(千元)'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='股票日线数据表',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_comment='股票日线数据表',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('uk_ts_code_trade_date'), 'stock_daily', ['ts_code', 'trade_date'], unique=True)
    op.create_index(op.f('idx_ts_code'), 'stock_daily', ['ts_code'], unique=False)
    op.create_index(op.f('idx_trade_date'), 'stock_daily', ['trade_date'], unique=False)
    op.create_table('market_data',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('trade_date', sa.DATE(), nullable=False, comment='交易日期'),
    sa.Column('market_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False, comment='市场类型(SH/SZ/CYB等)'),
    sa.Column('total_mv', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='总市值(亿元)'),
    sa.Column('float_mv', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='流通市值(亿元)'),
    sa.Column('total_share', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='总股本(亿股)'),
    sa.Column('float_share', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='流通股本(亿股)'),
    sa.Column('free_share', mysql.DECIMAL(precision=20, scale=2), nullable=True, comment='自由流通股本(亿股)'),
    sa.Column('turnover_rate', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='换手率'),
    sa.Column('turnover_rate_f', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='换手率(自由流通股)'),
    sa.Column('pe', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='市盈率'),
    sa.Column('pe_ttm', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='市盈率TTM'),
    sa.Column('pb', mysql.DECIMAL(precision=8, scale=4), nullable=True, comment='市净率'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='市场数据表',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_comment='市场数据表',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('uk_trade_date_market_type'), 'market_data', ['trade_date', 'market_type'], unique=True)
    op.create_index(op.f('idx_trade_date'), 'market_data', ['trade_date'], unique=False)
    op.create_index(op.f('idx_market_type'), 'market_data', ['market_type'], unique=False)
    op.create_table('data_tasks',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('task_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=False, comment='任务名称'),
    sa.Column('task_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False, comment='任务类型'),
    sa.Column('task_config', mysql.JSON(), nullable=True, comment='任务配置(JSON格式)'),
    sa.Column('status', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), server_default=sa.text("'pending'"), nullable=False, comment='任务状态'),
    sa.Column('priority', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=True, comment='优先级'),
    sa.Column('retry_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=True, comment='重试次数'),
    sa.Column('max_retry', mysql.INTEGER(), server_default=sa.text("'3'"), autoincrement=False, nullable=True, comment='最大重试次数'),
    sa.Column('start_time', mysql.DATETIME(), nullable=True, comment='开始时间'),
    sa.Column('end_time', mysql.DATETIME(), nullable=True, comment='结束时间'),
    sa.Column('duration', mysql.INTEGER(), autoincrement=False, nullable=True, comment='执行时长(秒)'),
    sa.Column('error_message', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True, comment='错误信息'),
    sa.Column('result', mysql.JSON(), nullable=True, comment='执行结果(JSON格式)'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='数据任务表',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_comment='数据任务表',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('idx_task_type'), 'data_tasks', ['task_type'], unique=False)
    op.create_index(op.f('idx_status'), 'data_tasks', ['status'], unique=False)
    op.create_index(op.f('idx_start_time'), 'data_tasks', ['start_time'], unique=False)
    op.create_index(op.f('idx_priority'), 'data_tasks', ['priority'], unique=False)
    op.create_index(op.f('idx_created_at'), 'data_tasks', ['created_at'], unique=False)
    op.create_table('macro_data',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('indicator_code', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False, comment='指标代码'),
    sa.Column('indicator_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=200), nullable=False, comment='指标名称'),
    sa.Column('period', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False, comment='数据周期'),
    sa.Column('period_date', sa.DATE(), nullable=False, comment='数据日期'),
    sa.Column('value', mysql.DECIMAL(precision=20, scale=6), nullable=True, comment='指标值'),
    sa.Column('unit', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True, comment='单位'),
    sa.Column('source', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='数据来源'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='宏观经济数据表',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_comment='宏观经济数据表',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('uk_indicator_period_date'), 'macro_data', ['indicator_code', 'period_date'], unique=True)
    op.create_index(op.f('idx_period_date'), 'macro_data', ['period_date'], unique=False)
    op.create_index(op.f('idx_period'), 'macro_data', ['period'], unique=False)
    op.create_index(op.f('idx_indicator_code'), 'macro_data', ['indicator_code'], unique=False)
    op.drop_index('idx_trading_plans_type', table_name='trading_plans')
    op.drop_index('idx_trading_plans_status', table_name='trading_plans')
    op.drop_index('idx_trading_plans_date', table_name='trading_plans')
    op.drop_table('trading_plans')
    op.drop_index('idx_tasks_type', table_name='tasks')
    op.drop_index('idx_tasks_status', table_name='tasks')
    op.drop_index('idx_tasks_scheduled_at', table_name='tasks')
    op.drop_index('idx_tasks_priority', table_name='tasks')
    op.drop_index('idx_tasks_created_at', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('idx_system_logs_user_id', table_name='system_logs')
    op.drop_index('idx_system_logs_module', table_name='system_logs')
    op.drop_index('idx_system_logs_level', table_name='system_logs')
    op.drop_index('idx_system_logs_created_at', table_name='system_logs')
    op.drop_table('system_logs')
    op.drop_index('idx_stock_daily_ts_code_date', table_name='stock_daily_data')
    op.drop_index('idx_stock_daily_ts_code', table_name='stock_daily_data')
    op.drop_index('idx_stock_daily_trade_date', table_name='stock_daily_data')
    op.drop_table('stock_daily_data')
    op.drop_index('idx_stock_basic_symbol', table_name='stock_basic_info')
    op.drop_index('idx_stock_basic_name', table_name='stock_basic_info')
    op.drop_index('idx_stock_basic_market', table_name='stock_basic_info')
    op.drop_index('idx_stock_basic_list_status', table_name='stock_basic_info')
    op.drop_index('idx_stock_basic_industry', table_name='stock_basic_info')
    op.drop_table('stock_basic_info')
    op.drop_index('idx_sentiment_score', table_name='sentiment_analysis')
    op.drop_index('idx_sentiment_news_id', table_name='sentiment_analysis')
    op.drop_index('idx_sentiment_label', table_name='sentiment_analysis')
    op.drop_index('idx_sentiment_created_at', table_name='sentiment_analysis')
    op.drop_index('idx_sentiment_content_type', table_name='sentiment_analysis')
    op.drop_table('sentiment_analysis')
    op.drop_index('idx_positions_symbol', table_name='positions')
    op.drop_index('idx_positions_status', table_name='positions')
    op.drop_index('idx_positions_open_date', table_name='positions')
    op.drop_table('positions')
    op.drop_index('idx_cache_symbol', table_name='market_data_cache')
    op.drop_index('idx_cache_key', table_name='market_data_cache')
    op.drop_index('idx_cache_expires_at', table_name='market_data_cache')
    op.drop_index('idx_cache_data_type', table_name='market_data_cache')
    op.drop_table('market_data_cache')
    op.drop_index('idx_backtest_strategy_type', table_name='backtest_results')
    op.drop_index('idx_backtest_status', table_name='backtest_results')
    op.drop_index('idx_backtest_created_at', table_name='backtest_results')
    op.drop_table('backtest_results')
    # ### end Alembic commands ###
