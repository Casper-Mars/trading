"""Initial migration with data acquisition models

Revision ID: 8518750f9dbe
Revises:
Create Date: 2025-08-12 14:49:12.858969

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8518750f9dbe"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_collection_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "task_name", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column(
            "task_type", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "data_source", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column("target_symbols", sa.JSON(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("schedule_config", sa.JSON(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                "RETRYING",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("progress", sa.Integer(), nullable=False),
        sa.Column("total_records", sa.Integer(), nullable=True),
        sa.Column("processed_records", sa.Integer(), nullable=False),
        sa.Column("failed_records", sa.Integer(), nullable=False),
        sa.Column("last_run_at", sa.DateTime(), nullable=True),
        sa.Column("next_run_at", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_data_collection_data_source",
        "data_collection_tasks",
        ["data_source"],
        unique=False,
    )
    op.create_index(
        "idx_data_collection_last_run_at",
        "data_collection_tasks",
        ["last_run_at"],
        unique=False,
    )
    op.create_index(
        "idx_data_collection_next_run_at",
        "data_collection_tasks",
        ["next_run_at"],
        unique=False,
    )
    op.create_index(
        "idx_data_collection_status", "data_collection_tasks", ["status"], unique=False
    )
    op.create_index(
        "idx_data_collection_task_type",
        "data_collection_tasks",
        ["task_type"],
        unique=False,
    )
    op.create_table(
        "news_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "title", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False
        ),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column(
            "source", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True
        ),
        sa.Column(
            "author", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True
        ),
        sa.Column("publish_time", sa.DateTime(), nullable=True),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
        sa.Column(
            "category", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True
        ),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("related_stocks", sa.JSON(), nullable=True),
        sa.Column("sentiment_score", sa.Numeric(precision=5, scale=4), nullable=True),
        sa.Column(
            "sentiment_label",
            sqlmodel.sql.sqltypes.AutoString(length=20),
            nullable=True,
        ),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("is_processed", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_news_category", "news_data", ["category"], unique=False)
    op.create_index("idx_news_created_at", "news_data", ["created_at"], unique=False)
    op.create_index(
        "idx_news_is_processed", "news_data", ["is_processed"], unique=False
    )
    op.create_index(
        "idx_news_publish_time", "news_data", ["publish_time"], unique=False
    )
    op.create_index("idx_news_source", "news_data", ["source"], unique=False)
    op.create_index("idx_news_title", "news_data", ["title"], unique=False)
    op.create_table(
        "stock_basic_info",
        sa.Column(
            "ts_code", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False
        ),
        sa.Column(
            "symbol", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("area", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
        sa.Column(
            "industry", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True
        ),
        sa.Column("market", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
        sa.Column(
            "exchange", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True
        ),
        sa.Column(
            "curr_type", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True
        ),
        sa.Column(
            "list_status", sqlmodel.sql.sqltypes.AutoString(length=1), nullable=True
        ),
        sa.Column(
            "list_date", sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True
        ),
        sa.Column(
            "delist_date", sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True
        ),
        sa.Column("is_hs", sqlmodel.sql.sqltypes.AutoString(length=1), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("ts_code"),
    )
    op.create_index(
        "idx_stock_basic_industry", "stock_basic_info", ["industry"], unique=False
    )
    op.create_index(
        "idx_stock_basic_list_status", "stock_basic_info", ["list_status"], unique=False
    )
    op.create_index(
        "idx_stock_basic_market", "stock_basic_info", ["market"], unique=False
    )
    op.create_index("idx_stock_basic_name", "stock_basic_info", ["name"], unique=False)
    op.create_index(
        "idx_stock_basic_symbol", "stock_basic_info", ["symbol"], unique=False
    )
    op.create_table(
        "stock_daily_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "ts_code", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False
        ),
        sa.Column(
            "trade_date", sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False
        ),
        sa.Column("open", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("high", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("low", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("close", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("pre_close", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("change", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("pct_chg", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("vol", sa.Numeric(precision=20, scale=2), nullable=True),
        sa.Column("amount", sa.Numeric(precision=20, scale=4), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ts_code", "trade_date", name="uq_stock_daily_ts_code_date"
        ),
    )
    op.create_index(
        "idx_stock_daily_trade_date", "stock_daily_data", ["trade_date"], unique=False
    )
    op.create_index(
        "idx_stock_daily_ts_code", "stock_daily_data", ["ts_code"], unique=False
    )
    op.create_index(
        "idx_stock_daily_ts_code_date",
        "stock_daily_data",
        ["ts_code", "trade_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_stock_daily_ts_code_date", table_name="stock_daily_data")
    op.drop_index("idx_stock_daily_ts_code", table_name="stock_daily_data")
    op.drop_index("idx_stock_daily_trade_date", table_name="stock_daily_data")
    op.drop_table("stock_daily_data")
    op.drop_index("idx_stock_basic_symbol", table_name="stock_basic_info")
    op.drop_index("idx_stock_basic_name", table_name="stock_basic_info")
    op.drop_index("idx_stock_basic_market", table_name="stock_basic_info")
    op.drop_index("idx_stock_basic_list_status", table_name="stock_basic_info")
    op.drop_index("idx_stock_basic_industry", table_name="stock_basic_info")
    op.drop_table("stock_basic_info")
    op.drop_index("idx_news_title", table_name="news_data")
    op.drop_index("idx_news_source", table_name="news_data")
    op.drop_index("idx_news_publish_time", table_name="news_data")
    op.drop_index("idx_news_is_processed", table_name="news_data")
    op.drop_index("idx_news_created_at", table_name="news_data")
    op.drop_index("idx_news_category", table_name="news_data")
    op.drop_table("news_data")
    op.drop_index("idx_data_collection_task_type", table_name="data_collection_tasks")
    op.drop_index("idx_data_collection_status", table_name="data_collection_tasks")
    op.drop_index("idx_data_collection_next_run_at", table_name="data_collection_tasks")
    op.drop_index("idx_data_collection_last_run_at", table_name="data_collection_tasks")
    op.drop_index("idx_data_collection_data_source", table_name="data_collection_tasks")
    op.drop_table("data_collection_tasks")
    # ### end Alembic commands ###
