[project]
name = "quantitative-system"
version = "0.1.0"
description = "Quantitative Trading System"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "apscheduler>=3.11.0",
    "backtrader>=1.9.78.123",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "numpy>=2.2.6",
    "pandas>=2.3.1",
    "pydantic-settings>=2.10.1",
    "redis>=6.4.0",
    "sqlalchemy>=2.0.42",
    "sqlmodel>=0.0.24",
    "uvicorn>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.8.0",
    "ruff>=0.1.9",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "types-redis>=4.6.0",
    "types-requests>=2.31.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

# Ruff 配置
[tool.ruff]
# 每行最大字符数
line-length = 88

# 目标Python版本
target-version = "py310"

# 排除的文件和目录
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "scripts",
]

[tool.ruff.lint]
# 启用的规则集
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]

# 忽略的规则
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert detected
    "T201",  # print found
    "S104",  # possible binding to all interfaces
    "RUF002", # ambiguous unicode character in docstring
]

[tool.ruff.lint.per-file-ignores]
# 测试文件可以使用assert
"tests/**/*.py" = ["S101"]
# __init__.py文件可以有未使用的导入
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
# 导入排序配置
known-first-party = ["quantitative_system"]
split-on-trailing-comma = true

# MyPy 配置
[tool.mypy]
# 基本配置
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# 显示错误代码
show_error_codes = true
show_column_numbers = true

# 插件
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

# 忽略缺少类型存根的第三方库
[[tool.mypy.overrides]]
module = [
    "backtrader.*",
    "apscheduler.*",
    "redis.*",
]
ignore_missing_imports = true

# Pydantic 插件配置
[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

# Pytest 配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage 配置
[tool.coverage.run]
source = ["quantitative_system"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pandas-stubs>=2.3.0.250703",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.32.4.20250809",
]
